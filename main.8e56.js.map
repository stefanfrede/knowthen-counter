{"version":3,"sources":["webpack:///./src/actions.js","webpack:///./src/view.js","webpack:///./src/index.js","webpack:///./src/counter.js"],"names":["modify","State_default","a","createActions","update","increase","amount","model","x","mapProps_default","counter","y","execWith","decrease","key","pred","def","get","safeCounterNumber","isNumber_default","compose_default","option_default","chain_default","safe_default","prop_default","run","plusButton","document","getElementById","minusButton","__webpack_require__","e","then","bind","icons","_icons$default","default","plusIcon","plus","minusIcon","minus","firstChild","removeChild","appendChild","catch","error","console","readyState","addEventListener","attachEvent","actions","src_update","lib_default","stream","view","Object","lit_html","_templateObject","evalWith","models","scan","func","rootNode","map"],"mappings":";qLAIQA,EAAWC,EAAAC,EAAXF,OAcKG,EAAgB,SAAAC,GAAM,MAAK,CACtCC,SAAU,SAAAC,GAAM,OAAIF,EAAO,SAAAG,GAAK,OANVC,EAM8BF,EANzBN,EAAOS,IAAS,CAAEC,SANnCF,EAMgDA,EAN3C,SAAAG,GAAC,OAAIH,EAAIG,QAYoCC,SAASL,GAN/C,IAAAC,EANZA,KAaVK,SAAU,SAAAP,GAAM,OAAIF,EAAO,SAAAG,GAAK,OAJVC,EAI8BF,EAJzBN,EAAOS,IAAS,CAAEC,SAN9BF,EAMgDA,EAN3C,SAAAG,GAAC,OAAIA,EAAIH,QAU+BI,SAASL,GAJ/C,IAAAC,EANPA,ylBCMDM,EAAKC,EAAMC,EAHnBC,EAAQhB,EAAAC,EAARe,IAWFC,GARUJ,EAQiB,UARZC,EAQuBI,EAAAjB,EARjBc,EAQ2B,EAPpDI,IACEC,IAAOL,GACPM,IAAMC,IAAKR,IACXS,IAAKV,KAMHW,EAAM,WACV,IAAMC,EAAaC,SAASC,eAAe,WACrCC,EAAcF,SAASC,eAAe,YAE5CE,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WACGD,KAAK,SAAAE,GAGJ,IAHa,IAAAC,EACgCD,EAAME,QAArCC,EADDF,EACLG,KAAuBC,EADlBJ,EACWK,MAEjBd,EAAWe,YAChBf,EAAWgB,YAAYhB,EAAWe,YAKpC,IAFAf,EAAWiB,YAAYN,GAEhBR,EAAYY,YACjBZ,EAAYa,YAAYb,EAAYY,YAGtCZ,EAAYc,YAAYJ,KAEzBK,MAAM,SAAAC,GACLC,QAAQD,MAAMA,MAIQ,YAAxBlB,SAASoB,WACXtB,IAEIE,SAASqB,iBACXrB,SAASqB,iBAAiB,mBAAoBvB,GAE9CE,SAASsB,YAAY,qBAAsB,WACb,aAAxBtB,SAASoB,YACXtB,MAMD,IAAmByB,EC5DpBC,EAASC,EAAAlD,EAAKmD,SACd3C,ECHkC,CACtCH,MAAO,iBAAO,CACZG,QAAS,IAGX4C,MFyDwBJ,EEzDP/C,EDFWgD,GD2DO,SAAA5C,GAAK,OAAIgD,OAAAC,EAAA,EAAAD,CAAJE,IAOzBxC,EAAIC,GAAmBwC,SAASnD,GAIb,kBAAM2C,EAAQ7C,SAAS,IAGtB,kBAAM6C,EAAQrC,SAAS,QCxEtD8C,EAASP,EAAAlD,EAAK0D,KAAK,SAACrD,EAAOsD,GAAR,OAAiBA,EAAKtD,IAAQG,EAAQH,QAAS4C,GAElEW,EAAWnC,SAASC,eAAe,OACzC+B,EAAOI,IAAI,SAAAxD,GAAK,OAAIgD,OAAAC,EAAA,EAAAD,CAAO7C,EAAQ4C,KAAK/C,GAAQuD","file":"main.8e56.js","sourcesContent":["import State from 'crocks/State';\n\nimport mapProps from 'crocks/helpers/mapProps';\n\nconst { modify } = State;\n\n// add :: Number -> Number -> Number\nconst add = x => y => x + y;\n\n// subtract :: Number -> Number -> Number\nconst subtract = x => y => y - x;\n\n// increaseCounter :: Number -> State Object ()\nconst increaseCounter = x => modify(mapProps({ counter: add(x) }));\n\n// decreaseCounter :: Number -> State Object ()\nconst decreaseCounter = x => modify(mapProps({ counter: subtract(x) }));\n\nexport const createActions = update => ({\n  increase: amount => update(model => increaseCounter(amount).execWith(model)),\n  decrease: amount => update(model => decreaseCounter(amount).execWith(model)),\n});\n","import { html } from 'lit-html';\n\nimport State from 'crocks/State';\n\nimport chain from 'crocks/pointfree/chain';\nimport compose from 'crocks/helpers/compose';\nimport isNumber from 'crocks/predicates/isNumber';\nimport option from 'crocks/pointfree/option';\nimport prop from 'crocks/Maybe/prop';\nimport safe from 'crocks/Maybe/safe';\n\nimport './assets/styles/index.css';\n\nconst { get } = State;\n\n// propOr :: (String, (b -> Boolean), a) -> Object -> c\nconst propOr = (key, pred, def) =>\n  compose(\n    option(def),\n    chain(safe(pred)),\n    prop(key),\n  );\n\n// safeCounterNumber :: Object -> Number\nconst safeCounterNumber = propOr('counter', isNumber, 0);\n\nconst run = () => {\n  const plusButton = document.getElementById('js-plus');\n  const minusButton = document.getElementById('js-minus');\n\n  import('./assets/icons')\n    .then(icons => {\n      const { plus: plusIcon, minus: minusIcon } = icons.default;\n\n      while (plusButton.firstChild) {\n        plusButton.removeChild(plusButton.firstChild);\n      }\n\n      plusButton.appendChild(plusIcon);\n\n      while (minusButton.firstChild) {\n        minusButton.removeChild(minusButton.firstChild);\n      }\n\n      minusButton.appendChild(minusIcon);\n    })\n    .catch(error => {\n      console.error(error); // eslint-disable-line no-console\n    });\n};\n\nif (document.readyState !== 'loading') {\n  run();\n} else {\n  if (document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', run);\n  } else {\n    document.attachEvent('onreadystatechange', () => {\n      if (document.readyState === 'complete') {\n        run();\n      }\n    });\n  }\n}\n\nexport const createView = actions => model => html`\n  <div class=\"counter\">\n    <div class=\"counter__content\">\n      <h3 class=\"counter__title\">\n        Counter\n      </h3>\n      <p class=\"counter__paragraph\">\n        Count: ${get(safeCounterNumber).evalWith(model)}\n      </p>\n    </div>\n    <div class=\"counter__action\">\n      <button id=\"js-plus\" @click=${() => actions.increase(1)}>\n        +\n      </button>\n      <button id=\"js-minus\" @click=${() => actions.decrease(1)}>\n        -\n      </button>\n    </div>\n  </div>\n`;\n","import flyd from 'flyd';\nimport { render } from 'lit-html';\n\nimport { createCounter } from './counter';\n\nconst update = flyd.stream();\nconst counter = createCounter(update);\nconst models = flyd.scan((model, func) => func(model), counter.model(), update);\n\nconst rootNode = document.getElementById('app');\nmodels.map(model => render(counter.view(model), rootNode));\n","import { createActions } from './actions';\nimport { createView } from './view';\n\nexport const createCounter = update => ({\n  model: () => ({\n    counter: 0,\n  }),\n\n  view: createView(createActions(update)),\n});\n"],"sourceRoot":""}